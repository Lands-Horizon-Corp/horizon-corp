name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.SERVER_DB_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.SERVER_DB_NAME }}
          MYSQL_USER: ${{ secrets.SERVER_DB_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.SERVER_DB_PASSWORD }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-retries=5
          --health-start-period=30s
          --health-timeout=10s

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: docker/cache-action@v2
        with:
          path: |
            /tmp/.buildx-cache

      - name: Build and start services
        run: |
          docker-compose -f docker-compose.yml up --build -d

      - name: Wait for services to be healthy
        run: |
          docker-compose -f docker-compose.yml exec -T db mysqladmin ping -h db --silent || exit 1
          docker-compose -f docker-compose.yml exec -T server curl -f http://localhost:${{ secrets.SERVER_PORT }}/ || exit 1

      - name: Run Flyway migrations
        run: |
          docker-compose -f docker-compose.yml run --rm flyway

      - name: Run client and server tests
        run: |
          docker-compose -f docker-compose.yml exec -T client npm run test || exit 1
          docker-compose -f docker-compose.yml exec -T server go test ./... || exit 1

      - name: Stop and remove services
        run: |
          docker-compose -f docker-compose.yml down
